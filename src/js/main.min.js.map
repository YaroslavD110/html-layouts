{"version":3,"sources":["main.js"],"names":["$body","$","emailRegExp","tabs","nodes","controls","index","btn","each","addClass","get","click","removeClass","content","document","on","event","preventDefault","css","animate","scrollTop","attr","this","offset","top","window","width","ready","prevArrow","nextArrow","dotsClass","slidesToShow","slick","infinite","breakpoint","settings","arrows","dots","responsive","name","e","$this","values","serializeArray","rules","undefined","value","phone","email","message","test","length","validationResult","$group","find","$label","text","$input","concat","input","parent","console","toggleClass","validation","target","setTimeout","$productItems","$productControls","$productDescriptionItems","classList","className","_this","filter","control","activeItemId","setActiveItem","not","hover","classToAdd","repeat","$elem","parentElement","id","split","search","parseInt","delay","viewportChecker","invertBottomOffset","callbackFunction","action","data"],"mappings":"aAAA,IAAMA,MAAQC,EAAE,QACVC,YAAc,yJAIpB,SAASC,KAAKC,GAAdA,EAAAC,SAAcD,KAAO,SAAAE,EAAAC,GACJC,IAATH,IACJJ,EAAIK,GAAKG,SAAQ,UACfR,EAAEM,EAAKE,QAASC,IAAA,IAAhBD,SAAA,WAIFR,EAAEM,GAAKI,MAAM,WAAXJ,EAAAA,EAAKI,UAAMC,YAAW,UACtBX,EAAEG,MAAMC,SAAR,UAGAJ,EAAEG,EAAMS,SAASD,YAAY,UAC7BX,EAAEG,EAAMS,QAAQH,IAAIJ,IAAQG,SAAS,cAM3CR,EAAEa,UAAUC,GAAG,QAAS,eAAkB,SAAAC,GACxCA,EAAMC,iBAGNhB,EAAE,uBAAFW,YAAA,sBACAZ,EAAAA,wBAAsBY,YAAtB,uBAEAX,MAAEiB,IAAA,WAAcC,QACdlB,EADF,cAAAkB,QAQF,CANMC,UAAWnB,EAAEA,EAAEoB,KAAKC,KAAM,SAASC,SAASC,KAQhD,OAMAvB,EAAAwB,QAAAV,GAAA,SAAA,WACK,IAADd,EAACqB,MAAAI,SAAA,WAAA1B,MAAAkB,IAAA,aACHb,MAAAA,IAAUJ,WAAE,UAKdE,EAAAA,UAAKwB,MAAA,WAEHd,KAAAA,CAFFR,SAKAJ,EAAA,8BATEY,QAASZ,EAAE,+BAaX2B,KAAAA,CAEAC,SAAS5B,EACP,iCACF6B,QAAS7B,EAAE,kCAKL8B,EAAAA,mBAAcC,MAAA,CADND,aAAA,EAFZE,UAMA,EACEC,UACAC,uFACEC,UACAC,uFACAN,UAAAA,iBAHQO,WAAA,CATF,CAgBRJ,WAAY,KACZC,SAAU,CACRC,aADQ,IAAA,CAjBFF,WAAA,IA0BdC,SAAA,CAhBQC,QAAQ,EAiBfC,MAAY,EACTpB,aAAF,IAIA,CACEsB,WADY,IAEVJ,SAAI,CACFC,QAAO,EACRC,MAAA,EAhBCN,aAAc,OAOtB9B,EAAE,QAAQc,GAAG,SAAU,SAASyB,GAiB1BA,EAAAvB,iBAEC,IAAAwB,EAAAxC,EAAAqB,MAfCoB,EAASD,EAAME,iBAiBjBC,EAAOC,CACRN,KADQM,SAhBGC,GAkBZC,IAlBYD,IAAAA,EAkBNA,OACJ,MAAS,qBAKVE,MARQH,SAhBGC,GAyBZG,OAzBYH,EA4BTA,GAAA5C,YAAAgD,KAAAJ,QAAA,EAfQ,oBAaJA,sBAOLC,MAjBOF,SAiBPC,GACD,GAAAA,GAAAA,EAAAK,OAAA,GAlCH,MAAA,qBAyCEF,QAzBSJ,SAyBHO,GAfJ,OAAKN,EAmBLO,EAAOC,OAAK,GACb,iDADCD,EAFSD,yBAUPG,EAAAA,QAAOC,SAAAA,GACR,IAHDC,EAGOhB,EAAAa,KAAA,cAAAI,OAAAC,EAAApB,KAAA,qBAAAmB,OAAAC,EAAApB,KAAA,MACLc,EAAOzC,EAAPgD,OAAmB,yBACnBL,EAAAF,EAAAC,KAAA,gBACDF,EAAAR,EAAAe,EAAApB,OAAAK,EAAAe,EAAApB,MAAAoB,EAAAb,OApBL,iBAAAM,IAwBAS,EAAApD,SAAY,SAGd4C,EAAAC,KAAA,gBAAAE,KAAAJ,IAEIK,EACCK,GAAAA,WAAY,SAAAtB,GAlBX,IAAMuB,EAAanB,EAAMe,EAAMpB,OAASK,EAAMe,EAAMpB,MAAMC,EAAEwB,OAAOlB,OAuBrE,iBAAUiB,GADZV,EAEO5C,SAAA,SACLT,EAAUwD,KAAAO,KAIdV,EAAAzC,YAAA,SAtBQ2C,EAAOC,KAAK,SAyBlBS,QAAAA,IAAW,gBAAAhE,EAAAqB,MAAAqB,oBAhBb1C,EAAE,eAAeU,MAAM,WAoBvBV,EAAMiE,MACAC,YAAAA,sBACAC,KAAAA,gBAlBDN,YAAY,uBAoBUO,WAAnBC,MAAAA,IAAS,YAA+CtE,MAAAkB,IAAI,WAAA,QAfhElB,MAAMkB,IAAI,WAAY,YAK1BjB,EAAE,mCAAmCU,MAAM,WAAW,IAAA4D,EAAAjD,KAiBpDrB,EAAAqB,MAAOuB,IAAAA,UAAP,KARFoB,WAAA,WAAA,OAAAhE,EAAAsE,GAAArD,IAAA,UAAA,SAAA,OAaIgD,IAAAA,EAAAjE,EAAmB,2BACnBmE,EAAAA,EAAAA,gDACAA,EAAyBI,EAAzB,8DAYEC,EAAShE,SAAXiE,EAAAD,GACD,iBAAAC,GAjBHR,EAAA7C,KAAA,UAAA,GAGI+C,EAAyBxD,YAAY,UAiBzCuD,EAAAK,OAAoC,eAAO/D,SAAA,YAEzCyD,EAAiBF,KAAD,UAAhB,GACAW,EAAaC,IAAbD,UAAAA,OAAAD,IAAArD,KAAA,UAAA,IAHF+C,EAAAxD,YAAA,UAMEwD,EAAuBS,OAAvB,YAAAnB,OAAmCgB,EAAnC,MAAmCjE,SAAA,WAIrCkE,GAIEG,EAAYlE,YADa,UAEzBmE,EAAAA,GAFyBtE,SAAA,WApBvB0D,EAAiBvD,YAAY,WA0B3BuD,EAAWb,KAAG0B,QAAWH,MAAX,SAAdrC,GAlBJ,IAAMwB,EAASxB,EAAEwB,OAAOiB,cAoBpBC,EApCG,SAAAlB,GACLE,IAAAA,EAAc7C,EAAKgD,UAAnBvB,MAAAqC,MAAA,KAAA7B,KAAA,SAAAR,GAAA,MAAA,gBAAAI,KAAAJ,KAEAsB,GAAAA,EAAAA,CACAA,IAAAA,EAAAA,EAAAA,UAAAE,EAAAc,OAAA,UACD,OAAAC,SAAAH,EAAA,KA+BOI,CAAOtB,GACTgB,EAAMpE,EAAAA,KAGLX,EAAA,uBAFD4E,MAAA,WAGDF,EAAA,QAGHA,EAAOK,MA1Mb/E,EA+MA,SAAAsF,gBAAA,CACAT,WAAA,cACAC,QAAA,EACAS,oBAAA,EACAC,iBAJA,SAIAT,EAAAU,GACA,GAAA,QAAAA,EAAA,CACA,IAAAJ,EAAAN,EAAAW,KAAA,SAEAL,IACAN,EAAApE,YAAA,eACAqD,WAAA,WACAe,EAAAvE,SAAA,gBACA6E,IAIA,OAAAN","file":"main.min.js","sourcesContent":["const $body = $(\"body\");\nconst emailRegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n// const googleMapsAPIKey = \"\";\n\n// Function for creating tabs\nfunction tabs(nodes) {\n  nodes.controls.each((index, btn) => {\n    if (index === 0) {\n      $(btn).addClass(\"active\");\n      $(nodes.content.get(0)).addClass(\"active\");\n    }\n\n    $(btn).click(function() {\n      $(nodes.controls).removeClass(\"active\");\n      $(this).addClass(\"active\");\n\n      $(nodes.content).removeClass(\"active\");\n      $(nodes.content.get(index)).addClass(\"active\");\n    });\n  });\n}\n\n// Smooth scroll to section\n$(document).on(\"click\", \"a[href^=\\\"#\\\"]\", function(event) {\n  event.preventDefault();\n\n  $(\".navbar-btn__active\").removeClass(\"navbar-btn__active\");\n  $(\".navbar-wrap__active\").removeClass(\"navbar-wrap__active\");\n  $body.css(\"overflow\", \"auto\");\n\n  $(\"html, body\").animate(\n    {\n      scrollTop: $($.attr(this, \"href\")).offset().top\n    },\n    500\n  );\n});\n\n// Fix mobile menuon resize\n$(window).on(\"resize\", function() {\n  if ($(this).width() > 991 && $body.css(\"overflow\") === \"hidden\") {\n    $body.css(\"overflow\", \"auto\");\n  }\n});\n\n$(document).ready(function() {\n  // Create tabs for about section\n  tabs({\n    controls: $(\".about-tabs__controls-item\"),\n    content: $(\".about-tabs__content-item\")\n  });\n\n  // Create tabs for services section\n  tabs({\n    controls: $(\".services-tabs__controls-item\"),\n    content: $(\".services-tabs__content-item\")\n  });\n\n  // Init slick slider for responses\n  $(\".responses-wrap\").slick({\n    slidesToShow: 3,\n    infinite: false,\n    prevArrow:\n      \"<button class=\\\"responses-btn__prev\\\"><img src=\\\"img/slider-arrow-icon.svg\\\" /></button>\",\n    nextArrow:\n      \"<button class=\\\"responses-btn__next\\\"><img src=\\\"img/slider-arrow-icon.svg\\\" /></button>\",\n    dotsClass: \"responses-dots\",\n    responsive: [\n      {\n        breakpoint: 1250,\n        settings: {\n          slidesToShow: 2\n        }\n      },\n      {\n        breakpoint: 900,\n        settings: {\n          arrows: false,\n          dots: true,\n          slidesToShow: 2\n        }\n      },\n      {\n        breakpoint: 768,\n        settings: {\n          arrows: false,\n          dots: true,\n          slidesToShow: 1\n        }\n      }\n    ]\n  });\n\n  // Form validation\n  $(\"form\").on(\"submit\", function(e) {\n    e.preventDefault();\n\n    const $this = $(this);\n    const values = $this.serializeArray();\n    const rules = {\n      name(value) {\n        if (!value || !value.length) {\n          return \"Name is required!\";\n        }\n\n        return undefined;\n      },\n      email(value) {\n        if (!value) {\n          return \"Email is required!\";\n        }\n        if (!value || !emailRegExp.test(value)) {\n          return \"Email is invalid!\";\n        }\n\n        return undefined;\n      },\n      phone(value) {\n        if (value && value.length < 10) {\n          return \"Phone is invalid!\";\n        }\n\n        return undefined;\n      },\n      message(value) {\n        if (!value) {\n          return \"Message is required!\";\n        }\n        if (value.length < 20) {\n          return \"Message must have at least 20 characters!\";\n        }\n\n        return undefined;\n      }\n    };\n\n    values.forEach((input) => {\n      const $input = $this.find(`input[name=${input.name}], textarea[name=${input.name}]`);\n      const $group = $input.parent(\".contacts-form__group\");\n      const $label = $group.find(\".error-label\");\n      const validationResult = rules[input.name] && rules[input.name](input.value);\n\n      if (typeof validationResult === \"string\") {\n        $group.addClass(\"error\");\n        $group.find(\".error-label\").text(validationResult);\n      }\n\n      $input.on(\"keypress\", (e) => {\n        const validation = rules[input.name] && rules[input.name](e.target.value);\n\n        if (typeof validation === \"string\") {\n          $group.addClass(\"error\");\n          $label.text(validation);\n        } else {\n          $group.removeClass(\"error\");\n          $label.text(\"\");\n        }\n      });\n    });\n\n    console.log(\"Form values: \", $(this).serializeArray());\n  });\n\n  // Mobile menu\n  $(\".navbar-btn\").click(function() {\n    $(this)\n      .toggleClass(\"navbar-btn__active\")\n      .next(\".navbar-wrap\")\n      .toggleClass(\"navbar-wrap__active\");\n\n    if ($body.css(\"overflow\") === \"hidden\") {\n      $body.css(\"overflow\", \"auto\");\n    } else {\n      $body.css(\"overflow\", \"hidden\");\n    }\n  });\n\n  // Map interactive\n  $(\".projects-map .projects-overlay\").click(function() {\n    $(this).css(\"opacity\", \"0\");\n    setTimeout(() => $(this).css(\"display\", \"none\"), 300);\n  });\n\n  // Product animation\n  const $productItems = $(\".product-item__list > g\");\n  const $productControls = $(\".product-item__text-list .product-item__text\");\n  const $productDescriptionItems = $(\".product-description__list .product-description__list-item\");\n  const getID = (target) => {\n    const className = target.classList.value.split(\" \").find(value => /^group-[0-9]$/.test(value));\n\n    if (className) {\n      const id = className.substring(className.search(/[0-9]/));\n      return parseInt(id, 10);\n    }\n\n    return undefined;\n  };\n\n  const setActiveItem = (activeItemId, control) => {\n    if (typeof activeItemId !== \"number\") {\n      $productItems.attr(\"opacity\", 1);\n      $productDescriptionItems.removeClass(\"active\");\n      $productDescriptionItems.filter(\"[data-id=0]\").addClass(\"active\");\n    } else {\n      $productItems.attr(\"opacity\", 1);\n      $productItems.not(`.group-${activeItemId}`).attr(\"opacity\", 0.3);\n      $productDescriptionItems.removeClass(\"active\");\n      $productDescriptionItems.filter(`[data-id=${activeItemId}]`).addClass(\"active\");\n    }\n\n    if (!control) {\n      $productControls.removeClass(\"active\");\n    } else {\n      $productControls.removeClass(\"active\");\n      $(control).addClass(\"active\");\n    }\n  };\n\n  $productControls.find(\"rect\").hover((e) => {\n    const target = e.target.parentElement;\n    const id = getID(target);\n    setActiveItem(id, target);\n  });\n\n  $(\".product-item__list\").hover(() => {\n    setActiveItem(null);\n  });\n\n  setActiveItem(null);\n\n  // Animation on scroll\n  $(\".anim\").viewportChecker({\n    classToAdd: \"anim-action\",\n    repeat: false,\n    invertBottomOffset: true,\n    callbackFunction($elem, action) {\n      if (action === \"add\") {\n        const delay = $elem.data(\"delay\");\n\n        if (delay) {\n          $elem.removeClass(\"anim-action\");\n          setTimeout(() => {\n            $elem.addClass(\"anim-action\");\n          }, delay);\n        }\n      }\n\n      return $elem;\n    }\n  });\n});\n\n// Create Google Map\n// const googleMapStyles = [\n//   {\n//     featureType: \"administrative\",\n//     elementType: \"labels\",\n//     stylers: [\n//       {\n//         visibility: \"off\"\n//       }\n//     ]\n//   },\n//   {\n//     featureType: \"administrative\",\n//     elementType: \"labels.text.fill\",\n//     stylers: [\n//       {\n//         color: \"#444444\"\n//       }\n//     ]\n//   },\n//   {\n//     featureType: \"landscape\",\n//     elementType: \"all\",\n//     stylers: [\n//       {\n//         color: \"#f2f2f2\"\n//       }\n//     ]\n//   },\n//   {\n//     featureType: \"poi\",\n//     elementType: \"all\",\n//     stylers: [\n//       {\n//         visibility: \"off\"\n//       }\n//     ]\n//   },\n//   {\n//     featureType: \"road\",\n//     elementType: \"all\",\n//     stylers: [\n//       {\n//         saturation: -100\n//       },\n//       {\n//         lightness: 45\n//       }\n//     ]\n//   },\n//   {\n//     featureType: \"road.highway\",\n//     elementType: \"all\",\n//     stylers: [\n//       {\n//         visibility: \"simplified\"\n//       }\n//     ]\n//   },\n//   {\n//     featureType: \"road.arterial\",\n//     elementType: \"labels.icon\",\n//     stylers: [\n//       {\n//         visibility: \"off\"\n//       }\n//     ]\n//   },\n//   {\n//     featureType: \"transit\",\n//     elementType: \"all\",\n//     stylers: [\n//       {\n//         visibility: \"off\"\n//       }\n//     ]\n//   },\n//   {\n//     featureType: \"water\",\n//     elementType: \"all\",\n//     stylers: [\n//       {\n//         color: \"#d5e6ec\"\n//       },\n//       {\n//         visibility: \"on\"\n//       }\n//     ]\n//   }\n// ];\n\n// const infoWindowContent = `\n//   <div class=\"projects-window\">\n//     <img src=\"img/response-1.jpg\" alt=\"Window\" class=\"projects-window__preview\" />\n//     <div class=\"projects-window__details\">\n//       <h3 class=\"projects-window__details-subtitle\">Медичний центр</h3>\n//       <h1 class=\"projects-window__details-title\">Euro Clinic</h1>\n\n//       <div class=\"projects-window__details-item\">\n//         <img src=\"img/location-icon.svg\" alt=\"Icon\" class=\"projects-window__details-icon\" />\n//         м. Львів 79059, \u000bвул. І. Миколайчука, 9\n//       </div>\n\n//       <div class=\"projects-window__details-item\">\n//         <img src=\"img/phone-icon.svg\" alt=\"Icon\" class=\"projects-window__details-icon\" />\n//         <a href=\"tel:0322 937 111\">0322 937 111</a>\n//       </div>\n\n//       <div class=\"projects-window__details-item\">\n//         <img src=\"img/network-icon.svg\" alt=\"Icon\" class=\"projects-window__details-icon\" />\n//         <a href=\"lviv.euroclinic.com.ua\">lviv.euroclinic.com.ua</a>\n//       </div>\n//     </div>\n//   </div>\n// `;\n\n// const getPlaceInfo = placeId => new Promise((resolve, reject) => {\n//   fetch(\n//     `https://maps.googleapis.com/maps/api/place/details/json?placeid=ChIJN1t_tDeuEmsRUsoyG83frY4&key=${googleMapsAPIKey}`\n//   )\n//     .then(res => res.json())\n//     .then((res) => {\n//       console.log(\"Response from places API: \", res);\n//       resolve(res);\n//     })\n//     .catch(error => reject(error));\n// });\n\n// function initMap() {\n//   const Maps = window.google.maps;\n//   const mapNode = document.getElementById(\"projects-map\");\n//   const clinics = [\n//     { lat: 47.65283, lng: 23.5630113 },\n//     { lat: 48.7011097, lng: 16.3237555 },\n//     { lat: 49.0072688, lng: 17.5394927 },\n//     { lat: 48.2697747, lng: 17.7017145 }\n//   ];\n\n//   if (mapNode) {\n//     const map = new Maps.Map(mapNode, {\n//       center: { lat: 48.9694599, lng: 32.7080557 },\n//       zoom: 5,\n//       styles: googleMapStyles\n//     });\n\n//     clinics.forEach((clinicPosition) => {\n//       const infoWindow = new Maps.InfoWindow({\n//         content: infoWindowContent,\n//         maxWidth: 360\n//       });\n\n//       const marker = new Maps.Marker({\n//         position: clinicPosition,\n//         icon: \"../img/map-label.svg\",\n//         map\n//       });\n\n//       marker.addListener(\"click\", () => {\n//         infoWindow.open(map, marker);\n//       });\n//     });\n//   }\n// }\n"]}